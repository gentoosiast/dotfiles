-- https://github.com/neovim/nvim-lspconfig/

-- The nvim-cmp almost supports LSP's capabilities so You should advertise it to LSP servers..
local capabilities = vim.lsp.protocol.make_client_capabilities()
capabilities = require('cmp_nvim_lsp').update_capabilities(capabilities)

local on_attach = function(client, bufnr)
    vim.keymap.set('n', 'K', vim.lsp.buf.hover, { buffer = bufnr })
    vim.keymap.set('n', 'gd', vim.lsp.buf.definition, { buffer = bufnr })
    vim.keymap.set('n', 'gt', vim.lsp.buf.type_definition, { buffer = bufnr })
    vim.keymap.set('n', 'gi', vim.lsp.buf.implementation, { buffer = bufnr })
    vim.keymap.set('n', '<leader>rn', vim.lsp.buf.rename, { buffer = bufnr })
    vim.keymap.set('n', '<leader>ca', vim.lsp.buf.code_action, { buffer = bufnr })
end

local default_config = {
    capabilities = capabilities,
    on_attach = on_attach,
    flags = {
        -- This will be the default in neovim 0.7+
        debounce_text_changes = 150
    }
}

-- Use a loop to conveniently call 'setup' on multiple servers and
-- map buffer local keybindings when the language server attaches
local servers = { 'clangd', 'cssls', 'emmet_ls', 'html', 'jsonls', 'pylsp', 'rust_analyzer', 'taplo' }
for _, lsp in pairs(servers) do
    local config = default_config

    if lsp == 'clangd' then
        config = vim.tbl_deep_extend('force', config, {
            init_options = {
                -- https://clangd.llvm.org/extensions.html#file-status
                clangdFileStatus = true
            },
            capabilities = {
                -- https://github.com/jose-elias-alvarez/null-ls.nvim/issues/428
                offsetEncoding = { 'utf-16' }
            }
        })
    end

    if lsp == 'jsonls' then
        config = vim.tbl_deep_extend('force', config, {
            settings = {
                json = {
                    schemas = require('schemastore').json.schemas()
                }
            }
        })
    end

    require('lspconfig')[lsp].setup(config)
end

